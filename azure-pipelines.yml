# PHO build


# Triggers notes https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers?view=azure-devops&tabs=yaml
# https://docs.microsoft.com/en-us/azure/devops/release-notes/2019/sprint-146-update#avoid-triggering-multiple-ci-builds-for-pull-requests
#
trigger:
  branches:
    include:
      - 'develop'
      - 'release/*'
  paths:
    exclude:
      - readme.md
      - changelog.md
    ##- feature/yml


resources:
    repositories:
        - repository: cchmctemplates
          type: git
          name: CCHMC.Core/CCHMC.BuildTemplates
variables:
    buildConfiguration: release
    webSubDir: 'org.cchmc.pho.webapp'
    apiSubDir: 'org.cchmc.pho.api'
    # workingDir: src/CodeMedSheetApp
jobs:
    - job: build
      displayName: 'Building Application API and Angular SPA'
      pool:
        name: OnPrem_AppDev
        demands:
        - dotnet -equals netcoreapp3.1
      steps:
        - {template: security-step-prebuild.yml@cchmctemplates, parameters: {sonarqubeKey: 'cchmc-pho-webapp'}}
        # app
        # todo : where to setup flags for the swagger for uat/prod env (false)
        ## Building Angular SPA
        - script: npm cache verify
          displayName: 'NPM verify cache'
        - script: npm ci
          displayName : 'Installing NPM dependency'
          workingDirectory: $(Build.SourcesDirectory)/$(webSubDir)
        - script: npm run build-webApp #define in package.json
          displayName: 'Build angular website'
          workingDirectory: $(Build.SourcesDirectory)/$(webSubDir)
        - task: CopyFiles@2
          displayName: 'Copying SPA to API project'
          inputs:
            cleanTargetFolder: true
            sourceFolder: '$(Build.SourcesDirectory)/$(webSubDir)/dist/phoweb'
            targetFolder: '$(Build.SourcesDirectory)/$(apiSubDir)/wwwroot'
        ## setup dotnet 3.1 build # not sure if this is needed?
        - task: UseDotNet@2
          displayName: "Use .NET Core 3.1.x"
          inputs:
            version: '3.1.x'
            packageType: sdk
        - script: dotnet build --configuration $(buildConfiguration) /p:SourceRevisionId=$(Build.SourceVersion)
          displayName: 'dotnet build $(buildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: 'Running Unit Tests'
          inputs:
            command: 'test'
            projects: '**/*test.csproj'
            arguments: '--configuration $(buildConfiguration)'

        ## Buidling Dotnet API
        - task: DotNetCoreCLI@2
          displayName: 'Publish App (zip)'
          inputs:
            command: publish
            publishWebProjects: True
            arguments: '--no-build --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: True

        - task: PublishBuildArtifacts@1
          displayName: "Uploading Artifacts"
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'

        - {template: security-step-postbuild.yml@cchmctemplates}