@using PHO_WebApp.Models;
@model PHO_WebApp.Models.QuestionResponse

@{
    Layout = null;
}

@Html.HiddenFor(m => m.QuestionId)
@if (Model.ResponseAnswer != null)
{
    @Html.HiddenFor(m => m.ResponseAnswer.ResponseId)
    @Html.HiddenFor(m => m.ResponseAnswer.ResponseAnswersId)
    @Html.HiddenFor(m => m.ResponseAnswer.AnswerOptionId)
}

@Html.HiddenFor(m => m.QuestionType)
@Html.HiddenFor(m => m.QuestionTypeId)
@Html.HiddenFor(m => m.QuestionLabel)
@Html.HiddenFor(m => m.Flag_Required)


@if (Model.QuestionType.ToUpper() == "TEXTBOX")

{
    <div class="form-group row">
        @Html.Label(Model.QuestionLabel.ToString())
        <div class="col-sm-10">
            @Html.TextBoxFor(q => q.Response_Text, new { })
            @Html.ValidationMessageFor(q => q.Response_Text, null, new { @class = "validationText" })
        </div>
    </div>
    <tr>
        <td style="width:500px"></td>
        <td style="width:500px"></td>
    </tr>
}
@if (Model.QuestionType.ToUpper() == "TEXTBOXNUMERIC")
{

    <div class="form-group row">
        @Html.Label(Model.QuestionLabel.ToString())
        <div class="col-sm-10">
            @Html.TextBoxFor(q => q.Response_Text, new { @type = "number" })
            @Html.ValidationMessageFor(q => q.Response_Text, null, new { @class = "validationText" })
        </div>
    </div>
}
@if (Model.QuestionType.ToUpper() == "TEXTBOXDATE")
{

    <div class="form-group row">
        @Html.Label(Model.QuestionLabel.ToString())
        <div class="col-sm-10">
            @Html.TextBoxFor(q => q.Response_Text, new { @type = "date" })
            @Html.ValidationMessageFor(q => q.Response_Text, null, new { @class = "validationText" })
        </div>
    </div>

}
@if (Model.QuestionType.ToUpper() == "TEXTBOXTELEPHONE")
{


    <div class="form-group row">
        @Html.Label(Model.QuestionLabel.ToString())
        <div class="col-sm-10">
            @Html.TextBoxFor(q => q.Response_Text, new { @type = "tel" })
            @Html.ValidationMessageFor(q => q.Response_Text, null, new { @class = "validationText" })

        </div>
    </div>

}
@if (Model.QuestionType.ToUpper() == "DROPDOWNLIST" && Model.ResponseAnswer != null)
{

    <div class="form-group row">
        @Html.Label(Model.QuestionLabel.ToString())
        <div class="col-sm-10">
            @Html.DropDownListFor(
            x => x.ResponseAnswer.AnswerOptionId,
            new SelectList(Model.QuestionAnswerOptions, "QuestionAnswerOptionId", "QuestionAnswerOptionLabel"),
            "-- Select Value --",
            new
            {
            id = "DropdownList"
            }
            )
            @Html.ValidationMessageFor(x => x.ResponseAnswer.AnswerOptionId, null, new { @class = "validationText" })
        </div>
    </div>

}
@if (Model.QuestionType.ToUpper() == "RADIOBUTTONLIST" && Model.ResponseAnswer != null)
{

    <div class="form-group row">
        @Html.Label(Model.QuestionLabel.ToString())
        <div class="col-sm-10">
            @foreach (QuestionAnswerOption q in Model.QuestionAnswerOptions)
            {
                < div >
                < label >
                @Html.RadioButtonFor(m => m.ResponseAnswer.AnswerOptionId, q.QuestionAnswerOptionId, null)
                @q.QuestionAnswerOptionId
                </ label >
                </ div >
            }
            @Html.ValidationMessageFor(m => m.ResponseAnswer.AnswerOptionId, null, new { @class = "validationText" })
        </div>
    </div>

}
@if (Model.QuestionType.ToUpper() == "MONTHYEARPICKER")
{    
    <div class="form-group row">
        @Html.Label(Model.QuestionLabel.ToString())
        <div class="col-sm-10">
            @Html.TextBoxFor(q => q.Response_Text, new { @type = "month" })
            @Html.ValidationMessageFor(q => q.Response_Text, null, new { @class = "validationText" })
        </div>
    </div>

}